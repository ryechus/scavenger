openapi: "3.0.0"
info:
  version: 0.1
  title: Scavenger Image Service
  license:
    name: Scavenger Arts & Media
servers:
  - url: https://images.scavengerarts.com
    description: production
  - url: http://localhost:32000
    description: local environment
paths:
  /:
    post:
      summary: Upload an image
      operationId: uploadImage
      requestBody:
        $ref: "#/components/requestBodies/Image"
      responses:
        200:
          description: URL of uploaded image
          content:
              text/plain:
                schema:
                  type: string
                  example: "https://images.scavengerarts.com/example.jpg"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{image_filename}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        200:
          description: image from service
          content:
              application/png:
                schema:
                  type: string
                  format: binary
        404:
          description: image not found
          content:
            text/plain:
              schema:
                type: string
                example: "image not found"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  requestBodies:
    Image:
      description: image payload
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: array
                items:
                  type: string
                  format: binary
              key:
                type: string
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

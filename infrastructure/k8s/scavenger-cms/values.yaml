# Default values for scavenger-cms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
environment:
  name: "DEV"

replicaCount: 1

image:
  repository: ryechus/scavenger-wagtail
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets:
  - name: docker.io.auth
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
#  className: ""
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/proxy-body-size: "0"
#    cert-manager.io/cluster-issuer: letsencrypt-staging
#  hosts:
#    - host: scavenger.news
#      paths:
#        - pathType: Prefix
#          path: "/"
#          backend:
#            service:
#              name: cms
#              port:
#                number: 8000
#
#  tls:
#    - hosts:
#      - hw1.scavenger.news
#      - hw2.scavenger.news
#      - registry.scavenger.news
#      - scavenger.news
#      secretName: scavenger-tls-apr-2022

cms:
  env_vars:
  - name: DJANGO_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: scavenger-django-secret-key
        key: DJANGO_SECRET_KEY
  - name: DB_HOST
    valueFrom:
      secretKeyRef:
        name: postgres-credentials
        key: DB_HOST
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: postgres-credentials
        key: DB_USER
  - name: DB_PASS
    valueFrom:
      secretKeyRef:
        name: postgres-credentials
        key: DB_PASSWORD
  - name: DB_NAME
    valueFrom:
      secretKeyRef:
        name: postgres-credentials
        key: DB_NAME
  - name: DB_PORT
    valueFrom:
      configMapKeyRef:
        name: cms-db-connection
        key: DB_PORT
  - name: AWS_S3_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: scavenger-aws-s3-cred
        key: AWS_S3_ACCESS_KEY_ID
  - name: AWS_S3_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: scavenger-aws-s3-cred
        key: AWS_S3_SECRET_ACCESS_KEY
  - name: ELASTIC_APM_SERVER_URL
    valueFrom:
      secretKeyRef:
        name: scavenger-elastic-apm
        key: ELASTIC_APM_SERVER_URL
  - name: ELASTIC_APM_SECRET
    valueFrom:
      secretKeyRef:
        name: scavenger-elastic-apm
        key: ELASTIC_APM_SECRET
  - name: FIELD_ENCRYPTION_KEY
    valueFrom:
      secretKeyRef:
        name: django-field-encryption-key
        key: FIELD_ENCRYPTION_KEY
  - name: GRAPH_API_APP_SECRET
    valueFrom:
      secretKeyRef:
        name: scavenger-graph-api
        key: GRAPH_API_APP_SECRET
  # New Relic
  - name: NEW_RELIC_LICENSE_KEY
    valueFrom:
      secretKeyRef:
        name: newrelic-license-key
        key: key

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
